// <auto-generated />
using System;
using BlazorApp.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BlazorApp.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BlazorApp.Shared.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("BlazorApp.Shared.DialogueObject", b =>
                {
                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Title");

                    b.ToTable("DialogueObjects");
                });

            modelBuilder.Entity("BlazorApp.Shared.DialogueSession", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DialogueTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaxScore")
                        .HasColumnType("integer");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("Username");

                    b.ToTable("DialogueSessions");

                    b.HasData(
                        new
                        {
                            id = new Guid("8ee0e5ea-a90a-4609-a599-cf5844a6b6e1"),
                            DialogueTitle = "Test",
                            MaxScore = 10,
                            Score = 1,
                            Username = "UserMeli",
                            date = new DateTime(2025, 1, 18, 12, 4, 27, 531, DateTimeKind.Utc).AddTicks(4860)
                        },
                        new
                        {
                            id = new Guid("df03861f-a70c-4d2f-baa9-73bcb058ee3d"),
                            DialogueTitle = "Test",
                            MaxScore = 10,
                            Score = 1,
                            Username = "UserMeli",
                            date = new DateTime(2025, 1, 18, 12, 4, 27, 541, DateTimeKind.Utc).AddTicks(120)
                        });
                });

            modelBuilder.Entity("BlazorApp.Shared.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CorrectAnswerId")
                        .HasColumnType("integer");

                    b.Property<string>("DialogueObjectTitle")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("DialogueObjectTitle");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("BlazorApp.Shared.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "Kwstasmel",
                            Email = "KonstantinosMel@gmail.com",
                            FirstName = "Konstantinos",
                            LastName = "Melissourgos",
                            Password = "1q2w3e4r",
                            Role = "Admin"
                        },
                        new
                        {
                            Username = "UserMeli",
                            Email = "KonstantinosMel@gmail.com",
                            FirstName = "Konstantinos",
                            LastName = "Melissourgos",
                            Password = "test123",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("BlazorApp.Shared.Answer", b =>
                {
                    b.HasOne("BlazorApp.Shared.Question", null)
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BlazorApp.Shared.DialogueSession", b =>
                {
                    b.HasOne("BlazorApp.Shared.User", "User")
                        .WithMany("DialogueSessions")
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApp.Shared.Question", b =>
                {
                    b.HasOne("BlazorApp.Shared.DialogueObject", null)
                        .WithMany("QuestionSet")
                        .HasForeignKey("DialogueObjectTitle")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BlazorApp.Shared.DialogueObject", b =>
                {
                    b.Navigation("QuestionSet");
                });

            modelBuilder.Entity("BlazorApp.Shared.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("BlazorApp.Shared.User", b =>
                {
                    b.Navigation("DialogueSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
